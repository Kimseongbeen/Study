controller_manager:
  ros__parameters:
    update_rate: 100  # Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    bumperbot_base_controller:
      type: diff_drive_controller/DiffDriveController

bumperbot_base_controller:
  ros__parameters:
    left_wheel_names: ["left_wheel_joint"]
    right_wheel_names: ["right_wheel_joint"]

    wheel_separation: 0.20
    wheel_radius: 0.033

    use_stamped_vel: false

    # Open loop control (no encoder feedback)
    open_loop: true

    # Reduced gains for open loop control
    gains:
      left_wheel_joint: {p: 0.5, i: 0.0, d: 0.0}
      right_wheel_joint: {p: 0.5, i: 0.0, d: 0.0}

    # Publish estimated odom to tf
    enable_odom_tf: true

    base_frame_id: base_footprint
    odom_frame_id: odom

    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits: true
        max_velocity: 0.5 # m/s
        has_acceleration_limits: true
        max_acceleration: 1.0 # m/s^2
    angular:
      z:
        has_velocity_limits: true
        max_velocity: 1.0 # rad/s
        has_acceleration_limits: true
        max_acceleration: 2.0 # rad/s^2

    # If true, consider low-level wheel commands as velocity commands (default: false)
    # Multiplied by the wheel radius to get linear velocity command
    velocity_command_input: true

    # If true, publish the control loop execution time (default: false)
    publish_rate: true

    # Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0

    # Feedback type
    position_feedback: false
    velocity_feedback: false

    # Controller timeout [s]
    # If no new command is received within this timeout, the controller stops the robot
    cmd_vel_timeout: 0.5

    # If true, publishes the interpolated value from the latest odometry to the current time
    publish_limited_velocity: false

    # Number of velocity steps to interpolate
    velocity_rolling_window_size: 10

    # Frame to use for velocity commands
    cmd_vel_in_odom_frame: false

    # If true, allows the controller to continue operating without odometry updates
    allow_no_odom: true

    # Topic to subscribe for robot velocity commands
    cmd_vel_topic: /cmd_vel

    # Topic to publish odometry messages
    odom_topic: /odom

    # Whether to reset odometry on startup
    reset_on_startup: true

    # Use local parameter server for parameter updates
    use_local_params: true